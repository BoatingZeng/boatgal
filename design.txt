#效果

##整体画面
1. 震动摇晃之类的

##文字区
1. 打字机效果，外加淡入等美化效果
2. 段落结束后，末尾加动态的等待提示

##背景
1. 背景切换时加一些幻灯片式过渡效果

##人物
1. 人物表情切换时尝试加过渡效果，使之有动感

##声音
1. BGM
2. 效果音，尽量灵活地插入

#数据结构
1. 用简单的分支结构

##命名
1. scenario {Object}: 剧本整体,分成多个无关的part。
   {
     partX {Array}: 一个partX数组,剧本的一部分,这部分内部会顺序执行,X是整数,从0开始,change对象的集合。
   }
2. change {Object}: part的元素,表示舞台的变化,添加或者切换某一类舞台元素(指背景、音效、人物、台词等),则把要添加或者切换后的舞台元素写在change中;要去除,则写off。变化以change的直接子元素为基础,即,figures这类本身是Array或Object的元素,一旦改变,就是改变整个Array和Object。change中改变最频繁的是dialog元素。
   {
     bg {String}: 背景图片的id
     bgm {String}: 背景音乐的id
     figures {Array}: figure对象的集合
     dialog {Object}: 
   }
3. figure {Object}: 表示一张非背景图片。
   {
     id {String}: 图片id
     position {Object}: 表示图片位置。包含x {Num}, y {Num}属性。
     effect {Object}: 描述关于该figure的效果。主要是进出场时的效果。
   }
4. dialog {Object}: 表示一句(段)对话
   {
     speaker {String}: 说话人名称
     speech {String}: 所说的话
     effect {Object}: 描述该对话期间的效果。比如说到某个词时有效果音,或者说到某个词时人物图片有动作(表情改变、晃动)。
   }

```json
  {
    "part0": [
      {
        "bg": "",
        "bgm": "",
        "figures": [{"id": "", "position": {x, y}, "effect": {}}],
        "dialog": {}
      }
    ]
  }
```

